// Generated by CoffeeScript 1.7.1
var RippleToDogecoinBridge, RippleToDogecoinBridgeController,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

RippleToDogecoinBridge = require("" + __dirname + "/ripple_to_dogecoin_bridge");

RippleToDogecoinBridgeController = (function() {
  function RippleToDogecoinBridgeController(gatewayd) {
    this.gatewayd = gatewayd;
    this.get = __bind(this.get, this);
  }

  RippleToDogecoinBridgeController.prototype.get = function(request, response) {
    var bridge;
    bridge = new RippleToDogecoinBridge(request.params.address, this.gatewayd);
    return bridge.getRippleAddress((function(_this) {
      return function(error, rippleAddress) {
        if (error) {
          return response.status(500).end();
        } else {
          return response.status(200).send({
            dogecoin: {
              address: request.params.address
            },
            ripple: {
              address: rippleAddress.address,
              tag: rippleAddress.tag
            }
          });
        }
      };
    })(this));
  };

  return RippleToDogecoinBridgeController;

})();

module.exports = RippleToDogecoinBridgeController;
